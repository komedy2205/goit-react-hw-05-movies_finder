{"version":3,"file":"static/js/628.f66389cd.chunk.js","mappings":"6VAEaA,EAAUC,EAAAA,GAAAA,QAAH,iEAKPC,EAAQD,EAAAA,GAAAA,GAAH,sCAILE,EAAaF,EAAAA,GAAAA,EAAH,wEAKVG,EAAiBH,EAAAA,GAAAA,IAAH,+CAIdI,EAAQJ,EAAAA,GAAAA,IAAH,+D,SC0ClB,EArDkB,SAAC,GAA6B,IAY1CK,EAZeC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAE5BC,EAQEF,EARFE,YACAC,EAOEH,EAPFG,KACAC,EAMEJ,EANFI,eACAC,EAKEL,EALFK,aACAC,EAIEN,EAJFM,eACAC,EAGEP,EAHFO,aACAC,EAEER,EAFFQ,SACAC,EACET,EADFS,OAKGV,OADYW,IAAjBL,EACgBA,EACAC,EACXD,GAAiBC,IACpBP,EAAW,IAIb,IAAsBY,EAQtB,OACE,UAAClB,EAAD,YACE,SAACI,EAAD,WACE,SAACC,EAAD,CAAOc,KAXSD,EAWST,EAVd,OAAXS,EACI,GAAN,OAAUV,GAAV,OAAqBU,GAEjB,GAAN,OAAUE,IAOiCC,IAAI,QAE7C,4BACE,UAACnB,EAAD,WACGS,GAAkBD,EADrB,KAC6BJ,EAASgB,MAAM,EAAG,GAD/C,QAGA,wCAAgBC,KAAKC,MAAsB,IAAfV,EAAsB,IAAlD,QACA,sCACA,uBAAIC,KACJ,mCAECC,IACC,SAACb,EAAD,UACGa,EAAOS,KAAI,SAACC,GAAD,OAAWA,EAAMhB,QAAMiB,KAAK,e,4BCjDvC3B,EAAUC,EAAAA,GAAAA,QAAH,oIAMP2B,GAAQ3B,EAAAA,EAAAA,IAAO4B,EAAAA,IAAP5B,CAAH,iFAOL6B,EAAS7B,EAAAA,GAAAA,OAAH,+WAiBN8B,GAAa9B,EAAAA,EAAAA,IAAO+B,EAAAA,GAAP/B,CAAH,mEAKVgC,EAAOhC,EAAAA,GAAAA,GAAH,6KASJC,EAAQD,EAAAA,GAAAA,GAAH,mFAMLiC,GAAUjC,EAAAA,EAAAA,IAAOkC,EAAAA,GAAPlC,CAAH,iPAcPmC,GAAYnC,EAAAA,EAAAA,IAAOoC,EAAAA,IAAPpC,CAAH,iFC/CTqC,EAAmB,WAAO,IAAD,QACpC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAO/B,EAAP,KAAiBkC,EAAjB,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAGjBC,EAAAA,EAAAA,YAAU,WAAM,wCACd,sHAEuBC,EAAAA,EAAAA,IAAwBL,GAF/C,cAEUM,EAFV,OAIIR,EAASQ,GAJb,UAM4BC,EAAAA,EAAAA,MAN5B,OAMUC,EANV,OAQUC,EAAUD,EAAUE,OAAOC,SAC3BC,EAAOJ,EAAUE,OAAOG,aACxBC,EAAcF,EAAKA,EAAKG,OAAS,GAGvChB,EAFyBU,EAAUK,GAXvC,kDAeIE,EAAAA,GAAAA,MAAY,gDAfhB,2DADc,uBAAC,WAAD,wBAmBdC,KACC,CAACjB,IAIJ,IACEkB,EASErB,EATFqB,cACApD,EAQE+B,EARF/B,YACAC,EAOE8B,EAPF9B,KACAC,EAME6B,EANF7B,eACAC,EAKE4B,EALF5B,aACAC,EAIE2B,EAJF3B,eACAC,EAGE0B,EAHF1B,aACAC,EAEEyB,EAFFzB,SACAC,EACEwB,EADFxB,OAGF,OACE,iCACE,UAAC,EAAD,YACE,UAACc,EAAD,CAAQgC,KAAK,SAAb,WACE,SAAClC,EAAD,KACA,SAACG,EAAD,CAAYgC,GAAE,iBAAElB,QAAF,IAAEA,GAAF,UAAEA,EAAUmB,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,IAAzC,yBAEF,SAAC,EAAD,CACE1D,UAAW,CACTsD,cAAAA,EACApD,YAAAA,EACAC,KAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,eAAAA,EACAC,aAAAA,EACAC,SAAAA,EACAC,OAAAA,GAEFR,SAAUA,QAGd,SAAC,EAAD,sCAEA,UAACyB,EAAD,YACE,yBACE,UAACC,EAAD,CAAS6B,GAAE,OAAUC,MAAO,CAAEC,KAAI,OAAEpB,QAAF,IAAEA,GAAF,UAAEA,EAAUmB,aAAZ,aAAE,EAAiBC,MAArD,mBACO,SAAC7B,EAAD,UAGT,yBACE,UAACF,EAAD,CAAS6B,GAAE,UAAaC,MAAO,CAAEC,KAAI,OAAEpB,QAAF,IAAEA,GAAF,UAAEA,EAAUmB,aAAZ,aAAE,EAAiBC,MAAxD,sBACU,SAAC7B,EAAD,aAId,SAAC,KAAD","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","pages/MovieDetailsPage/MovieDetailsPage.style.jsx","pages/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Section = styled.section`\n  display: flex;\n  padding-left: 20px;\n`;\n\nexport const Title = styled.h1`\n  margin: 0;\n`;\n\nexport const TextGenres = styled.p`\n  margin-bottom: 0px;\n  padding-bottom: 10px;\n`;\n\nexport const ImageContainer = styled.div`\n  margin-right: 20px;\n`;\n\nexport const Image = styled.img`\n  object-fit: cover;\n  width: 200px;\n`;\n","import img from \"../../images/no-poster1.png\";\nimport {\n  Section,\n  Image,\n  ImageContainer,\n  Title,\n  TextGenres,\n} from \"./MovieCard.styled\";\n\nconst MovieCard = ({ dataVideo, imageUrl }) => {\n  const {\n    poster_path,\n    name,\n    original_title,\n    release_date,\n    first_air_date,\n    vote_average,\n    overview,\n    genres,\n  } = dataVideo;\n\n  let filmYear;\n  release_date !== undefined\n    ? (filmYear = release_date)\n    : (filmYear = first_air_date);\n  if (!release_date && !first_air_date) {\n    filmYear = \"\";\n  }\n  //console.log(genres);\n\n  const isPosterPath = (poster) => {\n    if (poster !== null) {\n      return `${imageUrl}${poster}`;\n    }\n    return `${img}`;\n  };\n\n  //console.log(dataVideo);\n  return (\n    <Section>\n      <ImageContainer>\n        <Image src={isPosterPath(poster_path)} alt=\"\" />\n      </ImageContainer>\n      <div>\n        <Title>\n          {original_title || name} ({filmYear.slice(0, 4)})\n        </Title>\n        <p>User score: {Math.round((vote_average * 100) / 10)}%</p>\n        <h2>Overviev</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        {/* {genres.length === 0 && <p>No information about genres</p>} */}\n        {genres && (\n          <TextGenres>\n            {genres.map((genre) => genre.name).join(\", \")}\n          </TextGenres>\n        )}\n      </div>\n    </Section>\n  );\n};\n\nexport default MovieCard;\n\n/* ContactList.propTypes = {\n  visibleContact: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n}; */\n","import styled from \"styled-components\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { TiArrowBack } from \"react-icons/ti\";\nimport { ImArrowLeft } from \"react-icons/im\";\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border-bottom: black solid 1px;\n`;\nexport const Arrow = styled(TiArrowBack)`\n  width: 20px;\n  height: 15px;\n\n  margin-right: 2px;\n`;\n\nexport const Button = styled.button`\n  margin: 5px 20px;\n  padding: 5px 10px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  font-size: 14px;\n  border-radius: 5px;\n  border: none;\n  cursor: pointer;\n  font-weight: 400;\n  background-color: #ff7777;\n\n  :hover {\n    background-color: #ff5555;\n    transition: background-color 500ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const LinkButton = styled(Link)`\n  color: black;\n  text-decoration: none;\n`;\n\nexport const List = styled.ul`\n  padding-bottom: 10px;\n  margin: 0px;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  border-bottom: black solid 1px;\n`;\n\nexport const Title = styled.h3`\n  margin: 0;\n  padding-top: 10px;\n  padding-left: 20px;\n`;\n\nexport const LinkAdd = styled(NavLink)`\n  display: block;\n  color: black;\n  text-decoration: none;\n  padding-left: 5px;\n  &.active {\n    color: red;\n  }\n  :hover {\n    color: #1e90ff;\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n`;\n\nexport const ArrowInfo = styled(ImArrowLeft)`\n  width: 20px;\n  height: 15px;\n\n  margin-right: 2px;\n`;\n","import { useState, useEffect } from \"react\";\n\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport {\n  trendingFetchMoviesById,\n  imageMovie,\n} from \"../../services/themoviedbApi\";\nimport MovieCard from \"../../components/MovieCard/MovieCard\";\nimport {\n  Section,\n  Button,\n  LinkButton,\n  List,\n  LinkAdd,\n  Title,\n  Arrow,\n  ArrowInfo,\n} from \"./MovieDetailsPage.style\";\n\nexport const MovieDetailsPage = () => {\n  const [items, setItems] = useState([]);\n  const [imageUrl, setImageUrl] = useState(\"\");\n\n  const { movieId } = useParams();\n  const location = useLocation();\n  //console.log(\"location:\", location);\n\n  useEffect(() => {\n    async function fetch() {\n      try {\n        const item = await trendingFetchMoviesById(movieId);\n        //console.log(\"По Id:\", item);\n        setItems(item);\n\n        const imagesUrl = await imageMovie();\n        //console.log(\"imageUrl: \", imagesUrl);\n        const baseUrl = imagesUrl.images.base_url;\n        const size = imagesUrl.images.poster_sizes;\n        const lastElement = size[size.length - 1];\n        const imageUrlOriginal = baseUrl + lastElement;\n        //console.log(imageUrlOriginal);\n        setImageUrl(imageUrlOriginal);\n      } catch (error) {\n        toast.error(\"There is no review of the video and the cast\");\n      }\n    }\n    fetch();\n  }, [movieId]);\n\n  //console.log(items);\n\n  const {\n    backdrop_path,\n    poster_path,\n    name,\n    original_title,\n    release_date,\n    first_air_date,\n    vote_average,\n    overview,\n    genres,\n  } = items;\n\n  return (\n    <>\n      <Section>\n        <Button type=\"button\">\n          <Arrow />\n          <LinkButton to={location?.state?.from ?? \"/\"}>Go back</LinkButton>\n        </Button>\n        <MovieCard\n          dataVideo={{\n            backdrop_path,\n            poster_path,\n            name,\n            original_title,\n            release_date,\n            first_air_date,\n            vote_average,\n            overview,\n            genres,\n          }}\n          imageUrl={imageUrl}\n        />\n      </Section>\n      <Title>Additional information</Title>\n\n      <List>\n        <li>\n          <LinkAdd to={`cast`} state={{ from: location?.state?.from }}>\n            Cast <ArrowInfo />\n          </LinkAdd>\n        </li>\n        <li>\n          <LinkAdd to={`reviews`} state={{ from: location?.state?.from }}>\n            Reviews <ArrowInfo />\n          </LinkAdd>\n        </li>\n      </List>\n      <Outlet />\n    </>\n  );\n};\n"],"names":["Section","styled","Title","TextGenres","ImageContainer","Image","filmYear","dataVideo","imageUrl","poster_path","name","original_title","release_date","first_air_date","vote_average","overview","genres","undefined","poster","src","img","alt","slice","Math","round","map","genre","join","Arrow","TiArrowBack","Button","LinkButton","Link","List","LinkAdd","NavLink","ArrowInfo","ImArrowLeft","MovieDetailsPage","useState","items","setItems","setImageUrl","movieId","useParams","location","useLocation","useEffect","trendingFetchMoviesById","item","imageMovie","imagesUrl","baseUrl","images","base_url","size","poster_sizes","lastElement","length","toast","fetch","backdrop_path","type","to","state","from"],"sourceRoot":""}